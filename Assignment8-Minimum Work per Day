//A student has N tasks with different work units.He wants to complete all tasks in D days.Find the minimum amount of work he must do per day to finish all tasks within D days.
#include<iostream>
using namespace std;

int main() {
    int N, D;
    cout << "Enter number of tasks (N): ";
    cin >> N;

    cout << "Enter number of days (D): ";
    cin >> D;

    int work[50];
    cout << "Enter work units for each task:\n";
    for(int i = 0; i < N; i++) {
        cin >> work[i];
    }

    // Step 1: Find total work
    int totalWork = 0;
    for(int i = 0; i < N; i++) {
        totalWork += work[i];
    }

    // Step 2: Divide work among days
    // Minimum work per day = ceil(totalWork / D)
    int minWorkPerDay;
    if(totalWork % D == 0) {
        minWorkPerDay = totalWork / D;
    } else {
        minWorkPerDay = (totalWork / D) + 1;  // ceiling
    }

    // Step 3: Print result
    cout << "Minimum work per day required: " << minWorkPerDay << endl;

    return 0;
}

/*
--------------------
Sample Input:
Enter number of tasks (N): 5
Enter number of days (D): 3
Enter work units for each task:
10 20 30 40 50

Step 1: Total work = 150
Step 2: 150 / 3 = 50

Sample Output:
Minimum work per day required: 50
--------------------
*/
